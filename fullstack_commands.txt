-----------------------------------------------------------------------------------------------------------------------------------------------------------------
FRONTEND  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

* Create new Angular Project
-----------------------------

- Install node.js

- Install CLI using npm 
    $ npm install -g @angular/cli

- Create a new angular project
    $ ng new my-app
    
    
* Run an existing angular project
----------------------------------

- Go to project root folder
    $ npm install    
    $ npm update
    $ npm start / $ ng serve

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
BACKEND 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

Initialize a SpringBoot project
-------------------------------
start.spring.io

- Components used: Srpng web, Devtools, JPA, H2


Java Restful WebService
------------------------
@RestController		-> Annotate the class to be a restfull web service
@GetMapping("path")	-> Annotate the method to be a GET operation from the service
@PathVariable		-> To use variables coming in request path


Calling Backend Web Services from frontend
------------------------------------------
- Description: Calling a backend webservice method from angular 
               this.welcomeDataService.executeHelloWorldBeanService().subscribe();
  Error: Access to XMLHttpRequest at 'http://localhost:8080/hello-world-bean' from origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
  Solution: Adding into RestController class the ability that frontend (http://localhost:4200) can reach backend webservice 
            @CrossOrigin(origins="http://localhost:4200") 
            
            
Spring-Secutiry            
------------------
- add dependency
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    
- WebSecurityConfigurerAdapter
    * Extend this class in order to configure the incoming http request and be able to receive them from frontend
    
    * Annotate class with these:
      @Configuration
      @EnableWebSecurity
    
    * Override methis configure(HttpSecurity)
    @Override
	protected void configure(HttpSecurity http) throws Exception {
		http
			.csrf().disable()
			.authorizeRequests()
			.antMatchers(HttpMethod.OPTIONS, "/**").permitAll()
				.anyRequest().authenticated()
				.and()
			//.formLogin().and()
			.httpBasic();
	}	
			
JWT
------------------				

